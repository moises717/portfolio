---
import '@fontsource-variable/onest';
import { Meteors } from '@/components/Meteors';
import { ViewTransitions } from 'astro:transitions';

import { getI18N } from '@/i18n/index';

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });
---

<html lang='es'>
	<head>
		<meta charset='utf-8' />
		<link rel='apple-touch-icon' sizes='180x180' href='/apple-touch-icon.png' />
		<link rel='icon' type='image/png' sizes='32x32' href='/favicon-32x32.png' />
		<link rel='icon' type='image/png' sizes='16x16' href='/favicon-16x16.png' />
		<link rel='manifest' href='/site.webmanifest' />
		<link rel='mask-icon' href='/safari-pinned-tab.svg' color='#5bbad5' />
		<meta name='msapplication-TileColor' content='#da532c' />
		<meta name='theme-color' content='#ffffff' />
		<meta name='viewport' content='width=device-width' />
		<meta name='generator' content={Astro.generator} />

		<meta name='description' content={i18n.SEO.DESCRIPTION} />
		<meta name='author' content='MoisÃ©s Barillas' />
		<meta name='keywords' content='Desarrollador web, Nicaragua, Javascript, Node.js, HTML, CSS, React, Next.js' />
		<meta name='google-site-verification' content='wDYm2OfVXuMdWi6rYTfvQ38_JO9_L1hzPPgz7p9fyUA' />
		<link rel='canonical' />
		<title>{i18n.SEO.TITLE}</title>
		<ViewTransitions />
	</head>

	<body class='h-full'>
		<main
			class='flex items-center flex-col py-4 px-4 dark:bg-gray-900 dark:text-white bg-gray-50 text-gray-900 w-full h-full overflow-hidden'
			id='home'
		>
			<div class='w-full lg:max-w-4xl md:max-w-2xl relative min-h-screen'>
				<slot />
				<div class='circlePosition w-[150px] bg-blue-600 h-[150px] rounded-full absolute left-0 top-0 z-0 blur-[160px] md:top-36 md:right-56'></div>
				<div class='circlePosition w-[100px] bg-blue-600 h-[100px] rounded-full absolute right-0 bottom-96 z-0 blur-[100px]'></div>
				<Meteors client:only number={10} />
			</div>
		</main>

		<style is:global>
			:root {
				color-scheme: light dark;
			}
			html {
				font-family: 'Onest Variable', system-ui, sans-serif;
				scroll-behavior: smooth;
				width: 100%;
			}
			h2 {
				text-wrap: balance;
			}
		</style>

		<script is:inline>
			let remove = null;
			const matchMedia = window.matchMedia('(prefers-color-scheme: dark)');

			const getThemePreference = () => {
				if (typeof localStorage !== 'undefined') {
					return localStorage.getItem('theme') ?? 'system';
				}
				return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
			};

			const updateTheme = () => {
				if (remove != null) {
					remove();
				}
				matchMedia.addEventListener('change', updateTheme);
				remove = () => {
					matchMedia.removeEventListener('change', updateTheme);
				};

				const themePreference = getThemePreference();
				const isDark = themePreference === 'dark' || (themePreference === 'system' && matchMedia.matches);

				document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
			};

			updateTheme();
			document.addEventListener('astro:after-swap', updateTheme);
		</script>
	</body>
</html>
