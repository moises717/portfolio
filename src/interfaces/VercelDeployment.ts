// Generated by https://quicktype.io

export interface VercelProjects {
	projects: Project[];
	pagination: Pagination;
}

export interface Pagination {
	count: number;
	next: null;
	prev: number;
}

export interface Project {
	accountId: AccountID;
	alias: Alias[];
	autoExposeSystemEnvs: boolean;
	buildCommand: null;
	createdAt: number;
	devCommand: null;
	directoryListing: boolean;
	env: Env[];
	framework: string;
	gitForkProtection: boolean;
	id: string;
	installCommand: null;
	name: Name;
	nodeVersion: string;
	outputDirectory: null;
	publicSource: null;
	rootDirectory: null;
	serverlessFunctionRegion: string;
	sourceFilesOutsideRootDirectory: boolean;
	updatedAt: number;
	live: boolean;
	link: Link;
	latestDeployments: LatestDeployment[];
	targets: Targets;
}

export enum AccountID {
	TvIzoCDRDe4AC64LtQzBNCFN = 'TvIzoCDrDe4aC64LtQzBNCFN',
}

export interface Alias {
	configuredBy: string;
	configuredChangedAt: number;
	createdAt: number;
	deployment: LatestDeployment;
	domain: string;
	environment: Environment;
	target: string;
	gitBranch?: null;
	redirect?: null;
	redirectStatusCode?: null;
}

export interface LatestDeployment {
	alias: string[];
	aliasAssigned: number;
	builds: any[];
	createdAt: number;
	createdIn: CreatedIn;
	creator: Creator;
	deploymentHostname: string;
	forced: boolean;
	id: string;
	meta: {[key: string]: string};
	name: Name;
	plan: Plan;
	private: boolean;
	readyState: ReadyState;
	target: Environment;
	teamId: null;
	type: Type;
	url: string;
	userId: AccountID;
	withCache: boolean;
}

export enum CreatedIn {
	Sfo1 = 'sfo1',
}

export interface Creator {
	uid: AccountID;
	email: Email;
	username: Org;
	githubLogin: Org;
}

export enum Email {
	Moisesrocha717GmailCOM = 'moisesrocha717@gmail.com',
}

export enum Org {
	Moises717 = 'moises717',
}

export enum Name {
	PokeapiPokemonApp = 'pokeapi-pokemon-app',
	Portfolio = 'portfolio',
	Pupusas = 'pupusas',
}

export enum Plan {
	Hobby = 'hobby',
}

export enum ReadyState {
	Ready = 'READY',
}

export enum Environment {
	Production = 'production',
}

export enum Type {
	Lambdas = 'LAMBDAS',
}

export interface Env {
	type: string;
	value: string;
	target: string[];
	configurationId: null;
	id: string;
	key: string;
	createdAt: number;
	updatedAt: number;
	createdBy: AccountID;
	updatedBy: AccountID | null;
}

export interface Link {
	type: string;
	repo: string;
	repoId: number;
	org: Org;
	gitCredentialId: string;
	productionBranch: string;
	sourceless: boolean;
	createdAt: number;
	updatedAt: number;
	deployHooks: any[];
}

export interface Targets {
	production: LatestDeployment;
}
